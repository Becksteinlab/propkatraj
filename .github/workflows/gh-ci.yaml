name: GH Actions CI
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev
  schedule:
    - cron: "0 0 * * 0"

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  environment-config:
    runs-on: ubuntu-latest
    outputs:
      stable-python-version: ${{ steps.get_python_version.outputs.python-version }}
    steps:
      - uses: actions/checkout@v3

      - id: get-python-version
        uses: MDAnalysis/get-latest-python-version@main
        with:
          last-n-minor-release: 1

  main-tests:
    if: "github.repository == 'Becksteinlab/propkatraj'"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        mdanalysis-version: ["latest", "develop"]

    steps:
    - uses: actions/checkout@v3
    - name: Build information
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Install conda dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/environment.yml
        add-pip-as-python-dependency: true
        architecture: x64

        miniforge-variant: Mambaforge
        use-mamba: true
        channels: conda-forge, defaults

        activate-environment: propkatraj-test
        auto-update-conda: true
        auto-activate-base: false
        show-channel-urls: true

    - name: Install MDAnalysis version
      uses: MDAnalysis/install-mdanalysis@main
      with:
        version: ${{ matrix.mdanalysis-version }}
        install-tests: true
        installer:  mamba
        shell: bash -l {0} 
      
    - name: Install package
      run: |
        python --version
        python -m pip install .  --no-deps 

    - name: Python information
      run: |
        which python
        which pip
        pip list
        conda info
        conda list

    - name: Run tests
      run: |
        pytest -n 2 --cov=propkatraj --cov-report=xml -v --color=yes propkatraj/tests/

    - name: codecov
      uses: codecov/codecov-action@v3
      with:
              #token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.xml
        fail_ci_if_error: True
        verbose: True

  pylint_check:
    if: "github.repository == 'Becksteinlab/propkatraj'"
    needs: environment-config
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ needs.environment-config.outputs.stable-python-version }}

    - name: Install Pylint
      run: |
        which pip
        which python
        pip install pylint MDAnalysis>=2.0.0
    - name: Run Pylint
      env:
        PYLINTRC: .pylintrc
      run: |
        pylint propkatraj

  pypi_check:
    if: "github.repository == 'Becksteinlab/propkatraj'"
    needs: environment-config
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ needs.environment-config.outputs.stable-python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ needs.environment-config.outputs.stable-python-version }}

    - name: Install dependencies
      run: |
        pip install setuptools cython numpy twine
    - name: Build package
      run: |
        python setup.py sdist
    - name: Check package build
      run: |
        DISTRIBUTION=$(ls -t1 dist/propkatraj-*.tar.gz | head -n 1)
        test -n "${DISTRIBUTION}" || { echo "no distribution dist/propkatraj-*.tar.gz found"; exit 1; }
        echo "twine check $DISTRIBUTION"
        twine check $DISTRIBUTION
